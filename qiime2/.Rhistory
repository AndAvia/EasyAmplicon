library(amplicon)
beta_pcoa_stat()
beta_pcoa_stat
setwd("D:/BaiduNetdiskWorkspace/github/EasyMetagenome")
install.packages("multcompView")
install.packages("VennDiagram")
knitr::opts_chunk$set(
collapse = T, echo=T, comment="#>", message=F, warning=F,
fig.align="center", fig.width=5, fig.height=3, dpi=150)
# 基于CRAN安装R包
p_list = c("ggplot2", "BiocManager", "devtools")
for(p in p_list){if (!requireNamespace(p)){install.packages(p)}
library(p, character.only = TRUE, quietly = TRUE, warn.conflicts = FALSE)}
# 基于Bioconductor安装R包
if (!requireNamespace("ggtree", quietly = TRUE))
BiocManager::install("ggtree")
# 基于github安装，检测没有则安装
library(devtools)
if(!requireNamespace("amplicon", quietly = TRUE))
install_github("microbiota/amplicon")
# 加载R包 Load the package
suppressWarnings(suppressMessages(library(amplicon)))
setwd("D:/BaiduNetdiskWorkspace/github/EasyAmplicon/result")
# Data reading
metadata = read.table("metadata.txt", header=T, row.names=1, sep="\t", comment.char="", stringsAsFactors = F)
knitr::opts_chunk$set(
collapse = T, echo=T, comment="#>", message=F, warning=F,
fig.align="center", fig.width=5, fig.height=3, dpi=150)
# 基于CRAN安装R包
p_list = c("ggplot2", "BiocManager", "devtools")
for(p in p_list){if (!requireNamespace(p)){install.packages(p)}
library(p, character.only = TRUE, quietly = TRUE, warn.conflicts = FALSE)}
# 基于Bioconductor安装R包
if (!requireNamespace("ggtree", quietly = TRUE))
BiocManager::install("ggtree")
# 基于github安装，检测没有则安装
library(devtools)
if(!requireNamespace("amplicon", quietly = TRUE))
install_github("microbiota/amplicon")
# 加载R包 Load the package
suppressWarnings(suppressMessages(library(amplicon)))
# Data reading
metadata = read.table("metadata.txt", header=T, row.names=1, sep="\t", comment.char="", stringsAsFactors = F)
head(metadata, n = 3)
# colnames of group ID in metadata
# 设置实验分组列名
group = "Group"
# Output figure width and height
# Letter纸图片尺寸为单栏89 mm，双栏183 mm，页面最宽为247 mm
# 推荐比例16：10，即半版89 mm x 56 mm; 183 mm x 114 mm
width = 89
height = 59
# 手动指定分组列和顺序，默认为字母顺序
# metadata[[group]] = factor(metadata[[group]], levels = c("WT","KO","OE"))
# 按实验设计中分组出现顺序
# metadata[[group]] = factor(metadata[[group]], levels = unique(metadata[[group]]))
# vegan.txt中还有6种常用α多样性，alpha.txt中有11种α多样性
alpha_div = read.table("alpha/vegan.txt", header=T, row.names=1, sep="\t", comment.char="")
head(alpha_div, n = 3)
# capitalize
library(Hmisc)
colnames(alpha_div) = capitalize(colnames(alpha_div))
colnames(alpha_div)
# 选择指数"Richness","Chao1","ACE","Shannon","Simpson","Invsimpson"
alpha_index = "Richness"
# Plotting alpha diversity Richness boxplot and stat
(p = alpha_boxplot(alpha_div, index = alpha_index, metadata, groupID = group))
# Remove legend 去除图例
p = p + theme(legend.position = "NA")
# Saving figure 保存图片，大家可以修改图片名称和位置，长宽单位为毫米
ggsave(paste0("alpha/alpha_boxplot_",alpha_index,".pdf"), p, width = width, height = height, units = "mm")
# Save for cowplot 另存图片用于后期拼图
p1 = p
# 尝试探索不同的多样性各类
colnames(alpha_div)
alpha_boxplot(alpha_div, index = "Shannon", metadata, groupID = group)
# 尝试不同的分组方式
colnames(metadata)
alpha_boxplot(alpha_div, index = "Chao1", metadata, groupID = "Site")
# 数据读取 Data reading
alpha_rare = read.table("alpha/alpha_rare.txt", header=T, row.names=1, sep="\t", comment.char="")
alpha_rare[1:3, 1:3]
# 绘制稀释曲线+标准误 Plotting alpha rarefaction curve in group mean with standard error
(p = alpha_rare_curve(alpha_rare, metadata, groupID = group))
# Legend to low right 图例移至右下
(p = p + theme(legend.position = c(0.85,0.25)))
# 保存图片 Saving figure
ggsave("alpha/alpha_rarefaction_curve.pdf", p, width = width, height = height, units = "mm")
p2 = p
# 主坐标轴分析，可选距离矩阵bray_curtis、unifrac、unifrac_binary、jaccard、manhatten、euclidean
# 设置距离矩阵类似，常用bray_curtis或unifrac
distance_type = "bray_curtis"
# Data reading
distance_mat = read.table(paste0("beta/",distance_type,".txt"), header=T, row.names=1, sep="\t", comment.char="")
distance_mat[1:3, 1:3]
# Plotting Constrained PCoA based on distance matrix
(p = beta_pcoa(distance_mat, metadata, groupID = group))
# Legend to low right 图例移至右下
(p = p + theme(legend.position = c(0.2,0.8)))
# Saving figure
ggsave(paste0("beta/",distance_type,".pcoa.pdf"), p, width = width, height = height, units = "mm")
p3 = p
# statistic each pairwise by adonis
beta_pcoa_stat(distance_mat, metadata, groupID = group)
# 结果文件默认见beta_pcoa_stat.txt
# 展示样本标签 Display sample label
(p = beta_pcoa(distance_mat, metadata, groupID = group, label = T))
# 保存图片放大
ggsave(paste0("beta/",distance_type,".pcoa.label.pdf"), p, width = width*1.2, height = height*1.2, units = "mm")
# Plotting Constrained PCoA
(p = beta_cpcoa_dis(distance_mat, metadata, groupID = group))
# Legend to top left 图例移至左上
(p = p + theme(legend.position = c(0.2,0.7)))
# Saving figure
ggsave(paste0("beta/",distance_type,".cpcoa.pdf"), p, width = width, height = height, units = "mm")
p4 = p
# 预览元数据表头，确定要分析的变量
head(metadata,n=2)
# 仅查看分组对群落的解释
adonis_var <- adonis (as.dist(distance_mat) ~ Group, data = metadata, by=NULL, parallel=4)
adonis_var$aov.tab
write.table(adonis_var$aov.tab, file="beta/adonis_var_group.txt", append = F, sep="\t", quote=F, row.names=T, col.names=T)
# 计算Group, Date, Site三类变量及交互对群落结构差异的解释
adonis_var <- adonis (as.dist(distance_mat) ~ Group*Date*Site, data = metadata, by=NULL, parallel=4)
adonis_var$aov.tab
# 变量不能重合，否则无效。如本次Date与Site一致，所以Site无结果
# 计算Group和Site的解释率
adonis_var <- adonis (as.dist(distance_mat) ~ Group*Site, data = metadata, by=NULL, parallel=4)
adonis_var$aov.tab
write.table(adonis_var$aov.tab, file="beta/adonis_var.txt", append = F, sep="\t", quote=F, row.names=T, col.names=T)
# 设置分析级别 门p、纲c、目o、科f、属g
tax_level = "p"
# Data reading
tax_phylum = read.table(paste0("tax/sum_", tax_level, ".txt"), header=T, row.names=1, sep="\t", comment.char="")
tax_phylum[1:3, 1:3]
# Plotting samples taxonomy composition
(p = tax_stackplot(tax_phylum, metadata, topN = 8, groupID = group, style = "sample", sorted = "abundance"))
p5 =p
ggsave(paste0("tax/", tax_level,"_sample.pdf"), p, width = width*1.1, height = height, units = "mm")
# Plotting groups taxonomy composition
(p = tax_stackplot(tax_phylum, metadata, topN = 8, groupID = group, style = "group", sorted = "abundance"))
p6 = p
ggsave(paste0("tax/", tax_level,"_group.pdf"), p, width = width*1.1, height = height, units = "mm")
# 按字母顺序排列
(p = tax_stackplot(tax_phylum, metadata, topN = 8, groupID = group, style = "group", sorted = "alphabet"))
# 修改配色方案
library(RColorBrewer)
display.brewer.all()
(p = p + scale_fill_brewer(palette = "Set1"))
ggsave(paste0("tax/", tax_level,"_group.Set1.pdf"), p, width = width, height = height, units = "mm")
(p = p + scale_fill_brewer(palette = "Set2"))
ggsave(paste0("tax/", tax_level,"_group.Set2.pdf"), p, width = width, height = height, units = "mm")
# 输出结果有当前目录下默认参数的弦图circlize.pdf，每次颜色随机
# 指定颜色和图例的弦图circlize_legend.pdf
tax_circlize(tax_phylum, metadata, topN = 5, groupID = group)
# 查看结果不美观，尝试不同水平，如以纲为例
tax_class = read.table(paste0("tax/sum_c.txt"), header=T, row.names=1, sep="\t", comment.char="")
tax_circlize(tax_class, metadata, topN = 8, groupID = group)
library(cowplot)
(p0 = plot_grid(p1, p2, p3, p4, p5, p6, labels = c("A", "B", "C", "D", "E", "F"), ncol = 2))
ggsave("diversity.pdf", p0, width = width * 2, height = height * 3, units = "mm")
install.packages("pheatmap")
install.packages("igraph")
# 基于Bioconductor安装R包
if (!requireNamespace("edgeR", quietly = TRUE))
BiocManager::install("edgeR")
BiocManager::install(Biobase)
knitr::opts_chunk$set(echo = TRUE)
if (!require("Biobase", quietly = TRUE))
BiocManager::install("Biobase")
setwd("D:/BaiduNetdiskWorkspace/github/EasyAmplicon/qiime2")
