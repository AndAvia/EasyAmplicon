knitr::opts_chunk$set(echo = TRUE)
df = read.table("microbiome.txt", header=T, row.names=1, sep="\t", comment.char="", stringsAsFactors=F)
df = read.table("microbiome.txt", header=T, row.names=1, sep="\t", comment.char="", stringsAsFactors=F)
View(df)
df = read.table("microbiome.txt", header=T, row.names=NULL, sep="\t", comment.char="", stringsAsFactors=F)
View(df)
df$ID = 1:dim(df)[1]
head(df)
# Frequency line plot
(g1 = ggplot(df, aes(Year, Biology)) + geom_line(colour = 'blue') + labs(x = "Years", y = 'Papers in biology') + theme_bw())
library(ggplot2)
library(ggplot2)
df = read.table("microbiome.txt", header=T, row.names=NULL, sep="\t", comment.char="", stringsAsFactors=F)
# Frequency line plot
(g1 = ggplot(df, aes(Year, Biology)) + geom_line(colour = 'blue') + labs(x = "Years", y = 'Papers in biology') + theme_bw())
# Accumulated line plot, and manual set ylim
(g2 <- ggplot(df, aes(Year, microbiome)) + geom_line(colour = 'orange') + labs(x = "Years", y = 'Papers in microbiome') +  theme_classic()%+replace% theme(panel.background = element_rect(fill = NA))) # ylim(0,95.5) +
head(df)
# Accumulated line plot, and manual set ylim
(g2 <- ggplot(df, aes(Year, Microbiome)) + geom_line(colour = 'orange') + labs(x = "Years", y = 'Papers in microbiome') +  theme_classic()%+replace% theme(panel.background = element_rect(fill = NA))) # ylim(0,95.5) +
source("http://210.75.224.110/stat_plot_functions.R")
source("http://210.75.224.110/stat_plot_functions.R")
library(ggplot2)
df = read.table("microbiome.txt", header=T, row.names=NULL, sep="\t", comment.char="", stringsAsFactors=F)
# Frequency line plot
(g1 = ggplot(df, aes(Year, Biology)) + geom_line(colour = 'blue') + labs(x = "Years", y = 'Papers in biology') + theme_bw())
# Accumulated line plot, and manual set ylim
(g2 <- ggplot(df, aes(Year, Microbiome)) + geom_line(colour = 'orange') + labs(x = "Years", y = 'Papers in microbiome') +  theme_classic()%+replace% theme(panel.background = element_rect(fill = NA))) # ylim(0,95.5) +
# Add horizontal line in relative abundance of 90% OTUs
# (g2 = g2 + geom_hline(yintercept=a90, linetype=2, color="lightgrey") +
#   annotate("text",x=dim(df)[1],y=a90,label=round(a90,1))+
#   annotate("text",x=0,y=a90,label="90"))
ggplot2.two_y_axis(g1, g2)
(g1 = ggplot(df, aes(Year, Biology)) + geom_line(colour = 'blue') + labs(x = "Years", y = 'Papers in biology') + ylim(0,180000) + theme_bw())
# Accumulated line plot, and manual set ylim
(g2 <- ggplot(df, aes(Year, Microbiome)) + geom_line(colour = 'orange') + labs(x = "Years", y = 'Papers in microbiome') +ylim(0,25000) +  theme_classic()%+replace% theme(panel.background = element_rect(fill = NA))) #
# Add horizontal line in relative abundance of 90% OTUs
# (g2 = g2 + geom_hline(yintercept=a90, linetype=2, color="lightgrey") +
#   annotate("text",x=dim(df)[1],y=a90,label=round(a90,1))+
#   annotate("text",x=0,y=a90,label="90"))
ggplot2.two_y_axis(g1, g2)
ggplot2.two_y_axis(g1, g2)
df = read.table("country.txt", header=T, row.names=NULL, sep="\t", comment.char="", stringsAsFactors=F)
library(ggpubr)
head(df)
df = read.table("country.txt", header=T, row.names=NULL, sep="\t", comment.char="", stringsAsFactors=F)
head(df)
ggbarplot(dfm, x = "Papers", y = "Country", fill = "Country",
color = "white",
palette = "jco",
sort.val = "desc")
ggbarplot(df, x = "Papers", y = "Country", fill = "Country",
color = "white",
palette = "jco",
sort.val = "desc")
ggbarplot(df, x = "Papers", y = "Country", fill = "Country")
ggbarplot(df, x = "Papers", y = "Country", fill = "Country",
color = "white",
sort.val = "desc")
ggbarplot(df, x = "Country", y = "Papers", fill = "Country",
color = "white",
sort.val = "desc"ï¼‰
ggbarplot(df, x = "Country", y = "Papers", fill = "Country",
color = "white",
sort.val = "desc")
ggbarplot(df, x = "Papers", y = "Country", fill = "Country",
color = "white")
ggbarplot(df, x = "Papers", y = "Country", fill = "Country",
color = "white")
head(df)
df$Country = as.factor(df$Country, levles = df$Country)
df$Country
df$Country = as.factor(df$Country, levle = df$Country)
df$Country = factor(df$Country, levles = df$Country)
df = read.table("country.txt", header=T, row.names=NULL, sep="\t", comment.char="", stringsAsFactors=F)
df$Country = factor(df$Country, levles = df$Country)
df$Country = factor(df$Country, df$Country)
library(ggpubr)
head(df)
ggbarplot(df, x = "Papers", y = "Country", fill = "Country",
color = "white")
df = read.table("country.txt", header=T, row.names=NULL, sep="\t", comment.char="", stringsAsFactors=F)
df$Country = factor(df$Country, df$Country)
library(ggpubr)
head(df)
ggbarplot(df, x = "Papers", y = "Country", fill = "Country",
color = "white")
ggbarplot(df, x = "Papers", y = "Country", fill = "Country",
color = "white") + theme(legend.position = NA)
ggbarplot(df, x = "Papers", y = "Country", fill = "Country",
color = "white") + theme(legend.position = NA)
p = ggbarplot(df, x = "Papers", y = "Country", fill = "Country",
color = "white") + theme(legend.position = NA)
ggsave(paste("PaperByCountry.pdf", sep=""), p, width = 50, height = 68, units = "mm")
p = ggbarplot(df, x = "Papers", y = "Country", fill = "Country",
color = "white") + theme(legend.position = "NA")
ggsave(paste("PaperByCountry.pdf", sep=""), p, width = 50, height = 68, units = "mm")
ggsave(paste("PaperByCountry.pdf", sep=""), p, width = 100, height = 108, units = "mm")
p = ggbarplot(df, x = "Journals", y = "Country", fill = "Country",
color = "white") + theme(legend.position = "NA")
ggsave(paste("JournalByCountry.pdf", sep=""), p, width = 100, height = 108, units = "mm")
p = ggdotchart(df, x = "Journals", y = "Country", color  = "Country") + theme(legend.position = "NA")
p
(p = ggdotchart(df, x = "Journals", y = "Country", color  = "Country",add = "segments",dot.size = 6,label = df$Journals) + theme(legend.position = "NA"))
df$Journals
(p = ggdotchart(df, x = "Journals", y = "Country", color  = "Country",add = "segments",dot.size = 6) + theme(legend.position = "NA"))
ggdotchart(dfm, x = "name", y = "mpg",           color = "cyl",                                # Color by groups
palette = c("#00AFBB", "#E7B800", "#FC4E07"), # Custom color palette
sorting = "descending",                       # Sort value in descending order
add = "segments",                             # Add segments from y = 0 to dots
rotate = TRUE,                                # Rotate vertically
group = "cyl",                                # Order by groups
dot.size = 6,                                 # Large dot size
label = round(dfm$mpg),                        # Add mpg values as dot labels
font.label = list(color = "white", size = 9,
vjust = 0.5),               # Adjust label parameters
ggtheme = theme_pubr()                        # ggplot2 theme
)
ggdotchart(df, x = "Country", y = "Journals", color  = "Country",add = "segments",rotate = TRUE,dot.size = 6
)
df$Country
?ggdotchart
(p = ggdotchart(df, x = "Country", y = "Journals", color  = "Country",add = "segments",rotate = TRUE,dot.size = 6,
sorting = "none") + theme(legend.position = "NA"))
(p = ggdotchart(df, x = "Country", y = "Journals", color  = "Country",add = "segments",rotate = TRUE,dot.size = 6,
sorting = "none") + theme(legend.position = "NA"))
(p = ggdotchart(df, x = "Country", y = "Journals", color  = "Country",add = "segments",rotate = TRUE,dot.size = 6,
sorting = "none", label = df$Journals) + theme(legend.position = "NA"))
p
(p = ggdotchart(df, x = "Country", y = "Journals", color  = "Country",add = "segments",rotate = TRUE,dot.size = 6,
sorting = "none", label = df$Journals,font.label = list(color = "white", size = 9, vjust = 0.5)) + theme(legend.position = "NA"))
p
(p = ggdotchart(df, x = "Country", y = "Journals", color  = "Country",add = "segments",rotate = TRUE,dot.size = 6,
sorting = "none", label = df$Journals,font.label = list(color = "white", size = 9, vjust = 0.5)) +ggtheme = theme_pubr()  + theme(legend.position = "NA"))
(p = ggdotchart(df, x = "Country", y = "Journals", color  = "Country",add = "segments",rotate = TRUE,dot.size = 6,
sorting = "none", label = df$Journals,font.label = list(color = "white", size = 9, vjust = 0.5)) + ggtheme = theme_pubr()  + theme(legend.position = "NA"))
(p = ggdotchart(df, x = "Country", y = "Journals", color  = "Country",add = "segments",rotate = TRUE,dot.size = 6,
sorting = "none", label = df$Journals,font.label = list(color = "white", size = 9, vjust = 0.5),ggtheme = theme_pubr())    + theme(legend.position = "NA"))
ggsave(paste("JournalByCountry.pdf", sep=""), p, width = 100, height = 108, units = "mm")
(p = ggdotchart(df, x = "Country", y = "Journals", color  = "Country",add = "segments",rotate = TRUE,dot.size = 10,
sorting = "none", label = df$Journals,font.label = list(color = "white", size = 15, vjust = 0.5),ggtheme = theme_pubr())    + theme(legend.position = "NA"))
ggsave(paste("JournalByCountry.pdf", sep=""), p, width = 100, height = 108, units = "mm")
(p = ggdotchart(df, x = "Country", y = "Journals", color  = "Country",add = "segments",rotate = TRUE,dot.size = 9,
sorting = "none", label = df$Journals,font.label = list(color = "white", size = 15, vjust = 0.5),ggtheme = theme_pubr())    + theme(legend.position = "NA"))
ggsave(paste("JournalByCountry.pdf", sep=""), p, width = 100, height = 108, units = "mm")
(p = ggdotchart(df, x = "Country", y = "Journals", color  = "Country",add = "segments",rotate = TRUE,dot.size = 8,
sorting = "none", label = df$Journals,font.label = list(color = "white", size = 15, vjust = 0.5),ggtheme = theme_pubr())    + theme(legend.position = "NA"))
ggsave(paste("JournalByCountry.pdf", sep=""), p, width = 100, height = 108, units = "mm")
devtools::install_git("taowenmicro/ggClusterNet")
install_github("microbiota/amplicon")
devtools::install_github("microbiota/amplicon")
devtools::install_github("taowenmicro/ggClusterNet")
?ggClusterNet
??ggClusterNet
library(sna)
citation(sna)
citation("sna")
library(ggClusterNet)
setwd("D:/BaiduNetdiskWorkspace/train/ehbio/amplicon/25QIIME2")
setwd("D:/BaiduNetdiskWorkspace/github/EasyAmplicon/qiime2")
